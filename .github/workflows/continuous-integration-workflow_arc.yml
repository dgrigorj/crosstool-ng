name: CI_ARC

on:
  push:
  pull_request:


jobs:
  crosstool:
    runs-on: ${{ matrix.host }}
    strategy:
      matrix:
        host: [ "ubuntu-latest" ]
    steps:
      - name: "clone"
        uses: actions/checkout@v2
      - name: "prereq Linux"
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get install -y gperf help2man libtool-bin
      - name: "prereq macOS"
        if: ${{ runner.os == 'macOS' }}
        run: |
          brew install autoconf automake bash binutils gawk gnu-sed \
               gnu-tar help2man make ncurses
      - name: "build ct-ng"
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
            export PATH="$PATH:/usr/local/opt/binutils/bin"
            export CPPFLAGS="-I/usr/local/opt/ncurses/include -I/usr/local/opt/gettext/include"
            export LDFLAGS="-L/usr/local/opt/ncurses/lib -L/usr/local/opt/gettext/lib"
          fi
          ./bootstrap
          ./configure --prefix=$PWD/.local/
          make
          make install
          tar -cf ct-ng.tar .local/
      - name: "upload ct-ng"
        uses: actions/upload-artifact@v2
        with:
          name: crosstool.${{ matrix.host }}
          path: ct-ng.tar
      - name: "upload config.log"
        uses: actions/upload-artifact@v2
        with:
          name: config.log.${{ matrix.host }}
          path: config.log
        if: ${{ always() }}

  tarballs:
    needs: crosstool
    runs-on: ${{ matrix.host }}
    strategy:
      matrix:
        host: [ "ubuntu-latest" ]
    steps:
      - name: "download ct-ng"
        uses: actions/download-artifact@v2
        with:
          name: crosstool.${{ matrix.host }}
      - name: "extract ct-ng"
        run: |
          tar -xf ct-ng.tar
      - name: "prereq Linux"
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get install -y gperf help2man libtool-bin
          echo "$GITHUB_WORKSPACE/.local/bin" >> $GITHUB_PATH

  toolchains:
    needs: [ crosstool, tarballs ]
    uses: ./.github/workflows/build-toolchains-arc.yml
    with:
      samples: >-
        [
          "arc-multilib-elf32",
          "arc-multilib-linux-gnu",
          "arc-multilib-linux-uclibc",
          "snps-arc-arc700-linux-uclibc",
          "snps-arc-archs-linux-gnu",
          "snps-arc-archs-linux-uclibc",          
          "snps-arc-multilib-elf32",
          "snps-arc64-snps-linux-gnu",          
          "snps-arc64-unknown-elf"
        ]
