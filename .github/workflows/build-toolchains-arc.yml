name: Build ARC toolchains

on:
  workflow_call:
    inputs:
      samples:
        description: Stringified JSON list of samples
        required: true
        type: string

jobs:
  build:
    runs-on: ${{ matrix.host }}
    strategy:
      fail-fast: false
      matrix:
        host: [ "ubuntu-latest" ]
        sample: ${{ fromJSON(inputs.samples) }}
    steps:
      - name: download ct-ng
        uses: actions/download-artifact@v2
        with:
          name: crosstool.${{ matrix.host }}
      - name: extract ct-ng
        run: |
          tar -xf ct-ng.tar
      - name: download tarballs
        uses: actions/download-artifact@v2
        with:
          name: src.tar
      - name: extract tarballs
        run: |
          tar -xvf src.tar
      - name: prereq Linux
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get install -y gperf help2man libtool-bin
          echo "${{ github.workspace }}/.local/bin" >> $GITHUB_PATH
      - name: build ${{ matrix.sample }} for ${{ matrix.host }}
        run: |
          mkdir -p src
          ct-ng ${{ matrix.sample }}
          sed -i -e '/CT_LOG_PROGRESS_BAR/s/y$/n/' .config
          sed -i -e '/CT_LOCAL_TARBALLS_DIR/s/HOME/CT_TOP_DIR/' .config
          sed -i -e '/CT_PREFIX_DIR/s/HOME/CT_TOP_DIR/' .config
          ct-ng build
      - name: upload log
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.sample }}.${{ matrix.host }}.log
          path: |
            build.log
            .config
          retention-days: 2
        #if: ${{ always() }}
        if: ${{ failure() }}
