name: Build ARC toolchains

on:
  workflow_call:
    inputs:
      samples:
        description: Stringified JSON list of samples
        required: true
        type: string
      canadian-cross:
        description: Build Canadian Cross toolchain(x86_64-w64-mingw32)
        default: false
        required: false
        type: boolean


jobs:
  build:
    runs-on: ${{ matrix.host }}
    strategy:
      fail-fast: false
      matrix:
        sample: ${{ fromJSON(inputs.samples) }}
        host: [ "ubuntu-latest" ]
    steps:
      - name: download ct-ng
        uses: actions/download-artifact@v2
        with:
          name: crosstool.${{ matrix.host }}
      - name: extract ct-ng
        run: |
          tar -xf ct-ng.tar
      - name: download tarballs
        uses: actions/download-artifact@v2
        with:
          name: src.tar
      - name: extract tarballs
        run: |
          tar -xvf src.tar
      - name: prereq Linux
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get install -y gperf help2man libtool-bin
          echo "${{ github.workspace }}/.local/bin" >> $GITHUB_PATH

      - name: download x86_64-w64-mingw32.${{ matrix.host }} tarball
        if: inputs.canadian-cross && contains(matrix.sample, 'win')
#        if: ${{ inputs.canadian-cross && ((matrix.sample == 'snps-arc-elf32-win') || (matrix.sample == 'snps-arceb-elf32-win') || (matrix.sample == 'snps-arc64-elf-win')) }}
        uses: actions/download-artifact@v2
        with:
          name: x86_64-w64-mingw32.${{ matrix.host }}.tar
      - name: install x86_64-w64-mingw32.${{ matrix.host }} toolchain
        if: inputs.canadian-cross && contains(matrix.sample, 'win')
        #if: ${{ inputs.canadian-cross && ((matrix.sample == 'snps-arc-elf32-win') || (matrix.sample == 'snps-arceb-elf32-win') || (matrix.sample == 'snps-arc64-elf-win')) }}
        run: |
          mkdir -p ${{ github.workspace }}/x86_64-w64-mingw32
          tar -C ${{ github.workspace }}/x86_64-w64-mingw32 \
              -xf x86_64-w64-mingw32.${{ matrix.host }}.tar
          echo "${{ github.workspace }}/x86_64-w64-mingw32/bin" >> $GITHUB_PATH

      # - name: download i686-w64-mingw32.${{ matrix.host }} tarball
      #   if: ${{ inputs.canadian-cross && ((matrix.sample == 'snps-arc-elf32-win') || (matrix.sample == 'snps-arceb-elf32-win')) }}
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: i686-w64-mingw32.${{ matrix.host }}.tar
      # - name: install i686-w64-mingw32.${{ matrix.host }} toolchain
      #   if: ${{ inputs.canadian-cross && ((matrix.sample == 'snps-arc-elf32-win') || (matrix.sample == 'snps-arceb-elf32-win')) }}
      #   run: |
      #     mkdir -p ${{ github.workspace }}/i686-w64-mingw32
      #     tar -C ${{ github.workspace }}/i686-w64-mingw32 \
      #         -xf i686-w64-mingw32.${{ matrix.host }}.tar
      #     echo "${{ github.workspace }}/i686-w64-mingw32/bin" >> $GITHUB_PATH

      - name: build ${{ matrix.sample }} for ${{ matrix.host }}
        run: |
          df
          mkdir -p src
          ct-ng ${{ matrix.sample }}
          sed -i -e '/CT_LOG_PROGRESS_BAR/s/y$/n/' .config
          sed -i -e '/CT_LOCAL_TARBALLS_DIR/s/HOME/CT_TOP_DIR/' .config
          sed -i -e '/CT_PREFIX_DIR/s/HOME/CT_TOP_DIR/' .config
          ct-ng build


      - name: create ${{ matrix.sample }}.${{ matrix.host }} tarball
        if: ${{ matrix.sample == 'x86_64-w64-mingw32' }}
        run: |
          tar -C ${{ github.workspace }}/x-tools/${{ matrix.sample }} \
              -cf ${{ matrix.sample }}.${{ matrix.host }}.tar .
      - name: upload ${{ matrix.sample }}.${{ matrix.host }} tarball
        if: ${{ matrix.sample == 'x86_64-w64-mingw32' }}
        uses: actions/upload-artifact@v2
        with:
          name: x86_64-w64-mingw32.${{ matrix.host }}.tar
          path: |
            x86_64-w64-mingw32.${{ matrix.host }}.tar


      # - name: set mingw32 name to environment variable
      #   if: ${{ (matrix.sample == 'snps-x86_64-w64-mingw32') || (matrix.sample == 'snps-i686-w64-mingw32') }}
      #   run: |
      #     SAMPLE=${{ matrix.sample }}          
      #     echo "MINGW32=${SAMPLE#snps-}" >> $GITHUB_ENV
      # - name: create ${{ env.MINGW32 }}.${{ matrix.host }} tarball
      #   if: ${{ (matrix.sample == 'snps-x86_64-w64-mingw32') || (matrix.sample == 'snps-i686-w64-mingw32') }}
      #   run: |
      #     tar -C ${{ github.workspace }}/x-tools/${{ env.MINGW32 }} \
      #         -cf ${{ env.MINGW32 }}.${{ matrix.host }}.tar .
      # - name: upload ${{ env.MINGW32 }}.${{ matrix.host }} tarball
      #   if: ${{ (matrix.sample == 'snps-x86_64-w64-mingw32') || (matrix.sample == 'snps-i686-w64-mingw32') }}
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: ${{ env.MINGW32 }}.${{ matrix.host }}.tar
      #     path: |
      #       ${{ env.MINGW32 }}.${{ matrix.host }}.tar


      - name: upload log
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.sample }}.${{ matrix.host }}.log
          path: |
            build.log
            .config
          retention-days: 2
        if: ${{ always() }}
        #if: ${{ failure() }}
