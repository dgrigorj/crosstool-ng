name: Build ARC toolchains

on:
  workflow_call:
    inputs:
      samples:
        description: Stringified JSON list of samples
        required: true
        type: string
      canadian-cross:
        description: Build Canadian Cross toolchain
        default: false
        required: false
        type: boolean


jobs:
  build:
    runs-on: ${{ matrix.host }}
    strategy:
      fail-fast: false
      matrix:
        sample: ${{ fromJSON(inputs.samples) }}
        host: [ "ubuntu-latest" ]
    steps:
      - name: download ct-ng
        uses: actions/download-artifact@v2
        with:
          name: crosstool.${{ matrix.host }}
      - name: extract ct-ng
        run: |
          tar -xf ct-ng.tar
      - name: download tarballs
        uses: actions/download-artifact@v2
        with:
          name: src.tar
      - name: extract tarballs
        run: |
          tar -xvf src.tar
      - name: prereq Linux
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get install -y gperf help2man libtool-bin
          echo "${{ github.workspace }}/.local/bin" >> $GITHUB_PATH

      - name: set download tarball name to environment variable
        if: inputs.canadian-cross
        run: |
          if [[ ${{ matrix.sample }} == *"win"* ]]; then
            echo "DOWNLOAD_PREFIX=x86_64-w64-mingw32" >> $GITHUB_ENV
          elif [[ ${{ matrix.sample }} == *"native"* ]]; then
            echo "DOWNLOAD_PREFIX=arc-snps-linux-gnu" >> $GITHUB_ENV
          #elif [[ ${{ matrix.sample }} == *"macos"* ]]; then
          #  echo "DOWNLOAD_PREFIX=x86_64-apple-darwin15" >> $GITHUB_ENV
          fi
      - name: download ${{ env.DOWNLOAD_PREFIX }}.${{ matrix.host }} tarball
        if: inputs.canadian-cross
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.DOWNLOAD_PREFIX }}.${{ matrix.host }}.tar
      - name: install ${{ env.DOWNLOAD_PREFIX }}.${{ matrix.host }} toolchain
        if: inputs.canadian-cross
        run: |
          mkdir -p ${{ github.workspace }}/${{ env.DOWNLOAD_PREFIX }}
          tar -C ${{ github.workspace }}/${{ env.DOWNLOAD_PREFIX }} \
              -xf ${{ env.DOWNLOAD_PREFIX }}.${{ matrix.host }}.tar
          echo "${{ github.workspace }}/${{ env.DOWNLOAD_PREFIX }}/bin" >> $GITHUB_PATH




      - name: Get osxcross sources
        if: (matrix.sample == 'snps-arc-elf32-macos')
        uses: actions/checkout@v2
        with:
          repository: tpoechtrager/osxcross
          path: './osxcross'

      - name: Build OSXcross toolchain
        if: (matrix.sample == 'snps-arc-elf32-macos')
        run: |
          #sudo apt-get install patch clang cmake libssl-dev lzma-dev libxml2-dev gcc g++ zlib1g-dev libmpc-dev libmpfr-dev libgmp-dev
          sudo apt-get install clang cmake libssl-dev lzma-dev libxml2-dev zlib1g-dev libmpc-dev libmpfr-dev libgmp-dev
          sudo apt-get remove clang-11 clang-12 gcc-10 gcc-11 || true
          sudo apt autoclean && sudo apt autoremove


          pushd osxcross
            #wget -q -P ./tarballs/ https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX10.11.sdk.tar.xz 
            wget -q -P ./tarballs/ https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX11.3.sdk.tar.xz
            UNATTENDED=1 ./build.sh
            GCC_VERSION=11.2.0 ./build_gcc.sh
            BINUTILS_VERSION=2.36 GDB_VERSION=12.1 ./build_binutils.sh
          popd
          echo "${{ github.workspace }}/osxcross/target/bin" >> $GITHUB_PATH
          echo "${{ github.workspace }}/osxcross/target/binutils/bin" >> $GITHUB_PATH

          #clang -Wl,-t -lgmp 2>/dev/null

      - name: build ${{ matrix.sample }} for ${{ matrix.host }}
        run: |
          mkdir -p src
          ct-ng ${{ matrix.sample }}
          sed -i -e '/CT_LOG_PROGRESS_BAR/s/y$/n/' .config
          sed -i -e '/CT_LOCAL_TARBALLS_DIR/s/HOME/CT_TOP_DIR/' .config
          sed -i -e '/CT_PREFIX_DIR/s/HOME/CT_TOP_DIR/' .config
          ct-ng build


      - name: set upload tarball name to environment variable
        if: (matrix.sample == 'snps-x86_64-w64-mingw32') || (matrix.sample == 'snps-arc-archs-linux-gnu')
        run: |
          if [[ ${{ matrix.sample }} == 'snps-x86_64-w64-mingw32' ]]; then
            echo "UPLOAD_PREFIX=x86_64-w64-mingw32" >> $GITHUB_ENV
          elif [[ ${{ matrix.sample }} == 'snps-arc-archs-linux-gnu' ]]; then
            echo "UPLOAD_PREFIX=arc-snps-linux-gnu" >> $GITHUB_ENV
          #elif [[ ${{ matrix.sample }} == 'snps-x86_64-apple-darwin14' ]]; then
          #  echo "UPLOAD_PREFIX=x86_64-apple-darwin14" >> $GITHUB_ENV
          fi
      - name: create ${{ env.UPLOAD_PREFIX }}.${{ matrix.host }} tarball
        if: (matrix.sample == 'snps-x86_64-w64-mingw32') || (matrix.sample == 'snps-arc-archs-linux-gnu')
        run: |
          tar -C ${{ github.workspace }}/x-tools/${{ env.UPLOAD_PREFIX }} \
              -cf ${{ env.UPLOAD_PREFIX }}.${{ matrix.host }}.tar .
      - name: upload ${{ env.UPLOAD_PREFIX }}.${{ matrix.host }} tarball
        if: (matrix.sample == 'snps-x86_64-w64-mingw32') || (matrix.sample == 'snps-arc-archs-linux-gnu')
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.UPLOAD_PREFIX }}.${{ matrix.host }}.tar
          path: |
            ${{ env.UPLOAD_PREFIX }}.${{ matrix.host }}.tar

      - name: upload log
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.sample }}.${{ matrix.host }}.log
          path: |
            build.log
            .config
          retention-days: 2
        if: ${{ always() }}
        #if: ${{ failure() }}
